version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P SwN12345678 -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Users API Service
  usersapi:
    build:
      context: .
      dockerfile: Users.API/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=UsersDB;User Id=sa;Password=SwN12345678;TrustServerCertificate=true
      - JWT__SecretKey=your-super-secret-jwt-key-here-make-it-long-and-secure
      - JWT__Issuer=your-app-issuer
      - JWT__Audience=your-app-audience
      - JWT__ExpirationMinutes=60
      - Google__ClientId=your-google-client-id
      - Google__ClientSecret=your-google-client-secret
      - Facebook__AppId=your-facebook-app-id
      - Facebook__AppSecret=your-facebook-app-secret
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - ./Users.API/Logs:/app/Logs
    restart: unless-stopped

  # Nginx API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./API.Gateways/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./API.Gateways/ssl:/etc/nginx/ssl:ro
    depends_on:
      - usersapi
    networks:
      - backend
    restart: unless-stopped

  # Redis Cache (optional - for session/token caching)
  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - backend
  #   restart: unless-stopped

  # Azure Key Vault (optional - for secrets management)
  # azurite:
  #   image: mcr.microsoft.com/azure-storage/azurite
  #   ports:
  #     - "10000:10000"
  #     - "10001:10001"
  #     - "10002:10002"
  #   volumes:
  #     - azurite_data:/data
  #   networks:
  #     - backend
  #   restart: unless-stopped

volumes:
  sqlserver_data:
  # redis_data:
  # azurite_data:

networks:
  backend:
    driver: bridge